/**
 * Tipos COMPLETOS para classes
 * Incluye TODOS los campos del modelo Django
 */

export interface ClassLevel {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  name: string;
  displayName: string;
  display_name: string;
  description?: string;
  order: number;
  color: string;
  icon?: string;
  minParticipants: number;
  min_participants: number;
  maxParticipants: number;
  max_participants: number;
  defaultDurationMinutes: number;
  default_duration_minutes: number;
  basePrice: string;
  base_price: string;
  pricePerParticipant: boolean;
  price_per_participant: boolean;
  allowDropIn: boolean;
  allow_drop_in: boolean;
  requiresPackage: boolean;
  requires_package: boolean;
  allowWaitlist: boolean;
  allow_waitlist: boolean;
  user: string;
  bio?: string;
  specialties?: string[];
  certifications: Record<string, any>;
  yearsExperience: number;
  years_experience: number;
  availableDays: Record<string, any>;
  available_days: Record<string, any>;
  availableFrom: string;
  available_from: string;
  availableUntil: string;
  available_until: string;
  rating: string;
  totalRatings: number;
  total_ratings: number;
  isActive: boolean;
  is_active: boolean;
  acceptsSubstitutions: boolean;
  accepts_substitutions: boolean;
  maxWeeklyHours: number;
  max_weekly_hours: number;
  photoUrl?: string;
  photo_url?: string;
  instagram?: string;
  classType: string;
  class_type: string;
  level: string;
  instructor: string;
  court?: string;
  location?: string;
  startDate: string;
  start_date: string;
  endDate?: string;
  end_date?: string;
  startTime: string;
  start_time: string;
  durationMinutes: number;
  duration_minutes: number;
  recurrence: string;
  recurrenceDays: Record<string, any>;
  recurrence_days: Record<string, any>;
  price: string;
  memberPrice?: string;
  member_price?: string;
  dropInPrice?: string;
  drop_in_price?: string;
  waitlistSize: number;
  waitlist_size: number;
  enrollmentOpensDays: number;
  enrollment_opens_days: number;
  enrollmentClosesHours: number;
  enrollment_closes_hours: number;
  isPublished: boolean;
  is_published: boolean;
  cancelled: boolean;
  cancellationReason?: string;
  cancellation_reason?: string;
  schedule: string;
  scheduledDatetime: string;
  scheduled_datetime: string;
  actualStartTime?: string;
  actual_start_time?: string;
  actualEndTime?: string;
  actual_end_time?: string;
  substituteInstructor?: string;
  substitute_instructor?: string;
  enrolledCount: number;
  enrolled_count: number;
  attendedCount: number;
  attended_count: number;
  status: string;
  notes?: string;
  isFull?: any;
  is_full?: any;
  availableSpots?: any;
  available_spots?: any;
}

export interface ClassEnrollment {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  session: string;
  student: string;
  status: string;
  waitlistPosition?: number;
  waitlist_position?: number;
  enrolledAt: string;
  enrolled_at: string;
  cancelledAt?: string;
  cancelled_at?: string;
  cancellationReason?: string;
  cancellation_reason?: string;
  paid: boolean;
  paymentAmount?: string;
  payment_amount?: string;
  paymentMethod?: string;
  payment_method?: string;
  paymentReference?: string;
  payment_reference?: string;
  checkedIn: boolean;
  checked_in: boolean;
  checkInTime?: string;
  check_in_time?: string;
  notes?: string;
}

export interface ClassAttendance {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  session: string;
  enrollment: string;
  student: string;
  present: boolean;
  arrivalTime?: string;
  arrival_time?: string;
  departureTime?: string;
  departure_time?: string;
  instructorNotes?: string;
  instructor_notes?: string;
  performanceRating?: number;
  performance_rating?: number;
  studentRating?: number;
  student_rating?: number;
  studentFeedback?: string;
  student_feedback?: string;
}

export interface InstructorEvaluation {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  instructor: string;
  student: string;
  session: string;
  overallRating: number;
  overall_rating: number;
  teachingQuality: number;
  teaching_quality: number;
  punctuality: number;
  communication: number;
  comments?: string;
  wouldRecommend: boolean;
  would_recommend: boolean;
  isAnonymous: boolean;
  is_anonymous: boolean;
  name: string;
  description?: string;
  classTypes: string[];
  class_types: string[];
  numClasses: number;
  num_classes: number;
  validityDays: number;
  validity_days: number;
  price: string;
  isActive: boolean;
  is_active: boolean;
  transferable: boolean;
}

export interface StudentPackage {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  student: string;
  package: string;
  purchasedAt: string;
  purchased_at: string;
  expiresAt: string;
  expires_at: string;
  classesRemaining: number;
  classes_remaining: number;
  classesUsed: number;
  classes_used: number;
  paymentAmount: string;
  payment_amount: string;
  paymentReference: string;
  payment_reference: string;
  isActive: boolean;
  is_active: boolean;
}
