/**
 * Tipos TypeScript para clubs
 * Generado autom√°ticamente desde models.py
 */

export interface Club {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  name: string;
  slug: string;
  description?: string;
  organization: string;
  email: string;
  phone: string;
  website?: string;
  address: Record<string, any>;
  latitude?: string;
  longitude?: string;
  openingTime: string;
  opening_time: string;
  closingTime: string;
  closing_time: string;
  daysOpen: Record<string, any>;
  days_open: Record<string, any>;
  features: Record<string, any>;
  settings: Record<string, any>;
  logoUrl?: string;
  logo_url?: string;
  coverImageUrl?: string;
  cover_image_url?: string;
  primaryColor: string;
  primary_color: string;
  totalCourts: number;
  total_courts: number;
  totalMembers: number;
  total_members: number;
  onboardingCompleted: boolean;
  onboarding_completed: boolean;
  onboardingCompletedAt?: string;
  onboarding_completed_at?: string;
  parentClub?: string;
  parent_club?: string;
  isMainLocation: boolean;
  is_main_location: boolean;
  locationCode?: string;
  location_code?: string;
  subscriptionStatus: string;
  subscription_status: string;
  subscriptionPlan: string;
  subscription_plan: string;
  trialEndsAt?: string;
  trial_ends_at?: string;
  maxStaffCount: number;
  max_staff_count: number;
  analyticsEnabled: boolean;
  analytics_enabled: boolean;
  publicAnalytics: boolean;
  public_analytics: boolean;
  mobileCheckinEnabled: boolean;
  mobile_checkin_enabled: boolean;
  pushNotificationsEnabled: boolean;
  push_notifications_enabled: boolean;
  offlineModeEnabled: boolean;
  offline_mode_enabled: boolean;
  advanceBookingDays: number;
  advance_booking_days: number;
  cancellationDeadlineHours: number;
  cancellation_deadline_hours: number;
  minBookingDurationMinutes: number;
  min_booking_duration_minutes: number;
  maxBookingDurationMinutes: number;
  max_booking_duration_minutes: number;
  weatherIntegrationEnabled: boolean;
  weather_integration_enabled: boolean;
  calendarSyncEnabled: boolean;
  calendar_sync_enabled: boolean;
  themeColorSecondary: string;
  theme_color_secondary: string;
  themeColorAccent: string;
  theme_color_accent: string;
  customCss?: string;
  custom_css?: string;
  metaTitle?: string;
  meta_title?: string;
  metaDescription?: string;
  meta_description?: string;
  socialFacebook?: string;
  social_facebook?: string;
  socialInstagram?: string;
  social_instagram?: string;
  socialTwitter?: string;
  social_twitter?: string;
  socialWhatsapp?: string;
  social_whatsapp?: string;
}

export interface ClubForm {
  name?: string;
  slug?: string;
  description?: string;
  organization?: string;
  email?: string;
  phone?: string;
  website?: string;
  address?: Record<string, any>;
  latitude?: string;
  longitude?: string;
  openingTime?: string;
  closingTime?: string;
  daysOpen?: Record<string, any>;
  features?: Record<string, any>;
  settings?: Record<string, any>;
  logoUrl?: string;
  coverImageUrl?: string;
  primaryColor?: string;
  totalCourts?: number;
  totalMembers?: number;
  onboardingCompleted?: boolean;
  onboardingCompletedAt?: string;
  parentClub?: string;
  isMainLocation?: boolean;
  locationCode?: string;
  subscriptionStatus?: string;
  subscriptionPlan?: string;
  trialEndsAt?: string;
  maxStaffCount?: number;
  analyticsEnabled?: boolean;
  publicAnalytics?: boolean;
  mobileCheckinEnabled?: boolean;
  pushNotificationsEnabled?: boolean;
  offlineModeEnabled?: boolean;
  advanceBookingDays?: number;
  cancellationDeadlineHours?: number;
  minBookingDurationMinutes?: number;
  maxBookingDurationMinutes?: number;
  weatherIntegrationEnabled?: boolean;
  calendarSyncEnabled?: boolean;
  themeColorSecondary?: string;
  themeColorAccent?: string;
  customCss?: string;
  metaTitle?: string;
  metaDescription?: string;
  socialFacebook?: string;
  socialInstagram?: string;
  socialTwitter?: string;
  socialWhatsapp?: string;
}

export interface Court {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  club: string;
  organization: string;
  name: string;
  number: number;
  surfaceType: string;
  surface_type: string;
  hasLighting: boolean;
  has_lighting: boolean;
  hasHeating: boolean;
  has_heating: boolean;
  hasRoof: boolean;
  has_roof: boolean;
  isMaintenance: boolean;
  is_maintenance: boolean;
  maintenanceNotes?: string;
  maintenance_notes?: string;
  pricePerHour: string;
  price_per_hour: string;
  dynamicPricingEnabled: boolean;
  dynamic_pricing_enabled: boolean;
  peakHoursMultiplier: string;
  peak_hours_multiplier: string;
  weekendMultiplier: string;
  weekend_multiplier: string;
  dimensions: Record<string, any>;
  courtType: string;
  court_type: string;
  equipmentIncluded: Record<string, any>;
  equipment_included: Record<string, any>;
  amenities: Record<string, any>;
  weatherDependent: boolean;
  weather_dependent: boolean;
  minTemperature?: number;
  min_temperature?: number;
  maxTemperature?: number;
  max_temperature?: number;
  utilizationRate: string;
  utilization_rate: string;
  lastUtilizationUpdate?: string;
  last_utilization_update?: string;
  advanceBookingDays?: number;
  advance_booking_days?: number;
  minBookingDuration?: number;
  min_booking_duration?: number;
  maxBookingDuration?: number;
  max_booking_duration?: number;
  memberOnly: boolean;
  member_only: boolean;
  requiresApproval: boolean;
  requires_approval: boolean;
  skillLevelRequired: string;
  skill_level_required: string;
  qualityRating: string;
  quality_rating: string;
  totalRatings: number;
  total_ratings: number;
  images: Record<string, any>;
  availabilityTemplate: Record<string, any>;
  availability_template: Record<string, any>;
}

export interface CourtForm {
  club?: string;
  organization?: string;
  name?: string;
  number?: number;
  surfaceType?: string;
  hasLighting?: boolean;
  hasHeating?: boolean;
  hasRoof?: boolean;
  isMaintenance?: boolean;
  maintenanceNotes?: string;
  pricePerHour?: string;
  dynamicPricingEnabled?: boolean;
  peakHoursMultiplier?: string;
  weekendMultiplier?: string;
  dimensions?: Record<string, any>;
  courtType?: string;
  equipmentIncluded?: Record<string, any>;
  amenities?: Record<string, any>;
  weatherDependent?: boolean;
  minTemperature?: number;
  maxTemperature?: number;
  utilizationRate?: string;
  lastUtilizationUpdate?: string;
  advanceBookingDays?: number;
  minBookingDuration?: number;
  maxBookingDuration?: number;
  memberOnly?: boolean;
  requiresApproval?: boolean;
  skillLevelRequired?: string;
  qualityRating?: string;
  totalRatings?: number;
  images?: Record<string, any>;
  availabilityTemplate?: Record<string, any>;
}

export interface Schedule {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  club: string;
  organization: string;
  weekday: number;
  openingTime: string;
  opening_time: string;
  closingTime: string;
  closing_time: string;
  isClosed: boolean;
  is_closed: boolean;
  notes?: string;
}

export interface ScheduleForm {
  club?: string;
  organization?: string;
  weekday?: number;
  openingTime?: string;
  closingTime?: string;
  isClosed?: boolean;
  notes?: string;
}

export interface CourtSpecialPricing {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  court: string;
  organization: string;
  name: string;
  description?: string;
  periodType: string;
  period_type: string;
  startDate: string;
  start_date: string;
  endDate: string;
  end_date: string;
  startTime?: string;
  start_time?: string;
  endTime?: string;
  end_time?: string;
  daysOfWeek: Record<string, any>;
  days_of_week: Record<string, any>;
  pricePerHour: string;
  price_per_hour: string;
  priority: number;
}

export interface CourtSpecialPricingForm {
  court?: string;
  organization?: string;
  name?: string;
  description?: string;
  periodType?: string;
  startDate?: string;
  endDate?: string;
  startTime?: string;
  endTime?: string;
  daysOfWeek?: Record<string, any>;
  pricePerHour?: string;
  priority?: number;
}

export interface Announcement {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  club: string;
  organization: string;
  title: string;
  content: string;
  announcementType: string;
  announcement_type: string;
  startsAt: string;
  starts_at: string;
  endsAt: string;
  ends_at: string;
  isPriority: boolean;
  is_priority: boolean;
  showOnApp: boolean;
  show_on_app: boolean;
  showOnWebsite: boolean;
  show_on_website: boolean;
}

export interface AnnouncementForm {
  club?: string;
  organization?: string;
  title?: string;
  content?: string;
  announcementType?: string;
  startsAt?: string;
  endsAt?: string;
  isPriority?: boolean;
  showOnApp?: boolean;
  showOnWebsite?: boolean;
}

export interface MaintenanceType {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  organization: string;
  name: string;
  category: string;
  description?: string;
  estimatedDurationHours: string;
  estimated_duration_hours: string;
  estimatedCost: string;
  estimated_cost: string;
  frequencyDays?: number;
  frequency_days?: number;
  requiredMaterials: Record<string, any>;
  required_materials: Record<string, any>;
  safetyRequirements?: string;
  safety_requirements?: string;
}

export interface MaintenanceTypeForm {
  organization?: string;
  name?: string;
  category?: string;
  description?: string;
  estimatedDurationHours?: string;
  estimatedCost?: string;
  frequencyDays?: number;
  requiredMaterials?: Record<string, any>;
  safetyRequirements?: string;
}

export interface MaintenanceRecord {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  club: string;
  court: string;
  organization: string;
  maintenanceType?: string;
  maintenance_type?: string;
  scheduledDate: string;
  scheduled_date: string;
  scheduledEndDate?: string;
  scheduled_end_date?: string;
  startedAt?: string;
  started_at?: string;
  completedAt?: string;
  completed_at?: string;
  title: string;
  description: string;
  priority: string;
  status: string;
  assignedTo?: string;
  assigned_to?: string;
  completedBy?: string;
  completed_by?: string;
  estimatedCost: string;
  estimated_cost: string;
  actualCost?: string;
  actual_cost?: string;
  materialsUsed: Record<string, any>;
  materials_used: Record<string, any>;
  laborHours?: string;
  labor_hours?: string;
  qualityRating?: number;
  quality_rating?: number;
  followUpRequired: boolean;
  follow_up_required: boolean;
  followUpDate?: string;
  follow_up_date?: string;
  followUpNotes?: string;
  follow_up_notes?: string;
  beforePhotos: Record<string, any>;
  before_photos: Record<string, any>;
  afterPhotos: Record<string, any>;
  after_photos: Record<string, any>;
  additionalNotes?: string;
  additional_notes?: string;
  createdBy?: string;
  created_by?: string;
}

export interface MaintenanceRecordForm {
  club?: string;
  court?: string;
  organization?: string;
  maintenanceType?: string;
  scheduledDate?: string;
  scheduledEndDate?: string;
  startedAt?: string;
  completedAt?: string;
  title?: string;
  description?: string;
  priority?: string;
  status?: string;
  assignedTo?: string;
  completedBy?: string;
  estimatedCost?: string;
  actualCost?: string;
  materialsUsed?: Record<string, any>;
  laborHours?: string;
  qualityRating?: number;
  followUpRequired?: boolean;
  followUpDate?: string;
  followUpNotes?: string;
  beforePhotos?: Record<string, any>;
  afterPhotos?: Record<string, any>;
  additionalNotes?: string;
  createdBy?: string;
}

export interface MaintenanceSchedule {
  id: string;
  createdAt: string;
  created_at: string;
  updatedAt: string;
  updated_at: string;
  club: string;
  court?: string;
  organization: string;
  maintenanceType: string;
  maintenance_type: string;
  title: string;
  description?: string;
  frequency: string;
  customFrequencyDays?: number;
  custom_frequency_days?: number;
  preferredTime: string;
  preferred_time: string;
  durationHours: string;
  duration_hours: string;
  preferredWeekday?: number;
  preferred_weekday?: number;
  startDate: string;
  start_date: string;
  endDate?: string;
  end_date?: string;
  autoGenerate: boolean;
  auto_generate: boolean;
  generateDaysAhead: number;
  generate_days_ahead: number;
  defaultAssignedTo?: string;
  default_assigned_to?: string;
  lastGeneratedDate?: string;
  last_generated_date?: string;
  createdBy?: string;
  created_by?: string;
}

export interface MaintenanceScheduleForm {
  club?: string;
  court?: string;
  organization?: string;
  maintenanceType?: string;
  title?: string;
  description?: string;
  frequency?: string;
  customFrequencyDays?: number;
  preferredTime?: string;
  durationHours?: string;
  preferredWeekday?: number;
  startDate?: string;
  endDate?: string;
  autoGenerate?: boolean;
  generateDaysAhead?: number;
  defaultAssignedTo?: string;
  lastGeneratedDate?: string;
  createdBy?: string;
}
