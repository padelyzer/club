# Generated by Django 4.2.23 on 2025-07-29 07:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clubs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('root', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', max_length=20)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('action_url', models.URLField(blank=True)),
                ('action_label', models.CharField(blank=True, max_length=100)),
                ('deep_link', models.CharField(blank=True, help_text='Deep link for mobile apps', max_length=500)),
                ('data', models.JSONField(default=dict, help_text='Additional data for the notification')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('channel_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('push_web', 'Push Web'), ('push_mobile', 'Push Móvil'), ('in_app', 'In-App')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=50, help_text='Priority for fallback ordering (1=highest, 100=lowest)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('rate_limit_per_minute', models.IntegerField(blank=True, help_text='Maximum notifications per minute for this channel', null=True)),
                ('rate_limit_per_hour', models.IntegerField(blank=True, help_text='Maximum notifications per hour for this channel', null=True)),
                ('rate_limit_per_day', models.IntegerField(blank=True, help_text='Maximum notifications per day for this channel', null=True)),
                ('provider_config', models.JSONField(default=dict, help_text='Channel-specific configuration (API keys, endpoints, etc.)')),
            ],
            options={
                'verbose_name': 'Canal de Notificación',
                'verbose_name_plural': 'Canales de Notificación',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationDelivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('sent', 'Enviado'), ('delivered', 'Entregado'), ('failed', 'Fallido'), ('bounced', 'Rebotado'), ('read', 'Leído'), ('clicked', 'Clickeado')], default='pending', max_length=20)),
                ('attempt_count', models.IntegerField(default=0)),
                ('max_attempts', models.IntegerField(default=3)),
                ('provider_id', models.CharField(blank=True, help_text="Provider's message/delivery ID", max_length=255)),
                ('provider_response', models.JSONField(default=dict, help_text='Full provider response')),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('error_code', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='notifications.notificationchannel')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Entrega de Notificación',
                'verbose_name_plural': 'Entregas de Notificaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_system', models.BooleanField(default=False, help_text='System notifications cannot be disabled by users')),
                ('default_enabled', models.BooleanField(default=True, help_text='Default preference for new users')),
                ('available_channels', models.JSONField(default=list, help_text='List of channel slugs that support this notification type')),
            ],
            options={
                'verbose_name': 'Tipo de Notificación',
                'verbose_name_plural': 'Tipos de Notificaciones',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=200)),
                ('subject_template', models.CharField(blank=True, help_text='Template for subject/title (supports variables)', max_length=500)),
                ('body_template', models.TextField(help_text='Template for message body (supports HTML and variables)')),
                ('variables', models.JSONField(default=dict, help_text='Available variables for this template')),
                ('language', models.CharField(default='es-mx', max_length=10)),
                ('is_default', models.BooleanField(default=False, help_text='Default template for this notification type and channel')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='notifications.notificationchannel')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='clubs.club')),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='notifications.notificationtype')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='root.organization')),
            ],
            options={
                'verbose_name': 'Plantilla de Notificación',
                'verbose_name_plural': 'Plantillas de Notificaciones',
                'ordering': ['notification_type__name', 'channel__name'],
                'unique_together': {('notification_type', 'channel', 'organization', 'is_default'), ('notification_type', 'channel', 'organization', 'club', 'language')},
            },
        ),
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=200)),
                ('batch_type', models.CharField(choices=[('manual', 'Manual'), ('scheduled', 'Programado'), ('triggered', 'Disparado por evento')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('scheduled', 'Programado'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido'), ('cancelled', 'Cancelado')], default='draft', max_length=20)),
                ('recipient_filters', models.JSONField(default=dict, help_text='Filters to select recipients dynamically')),
                ('subject', models.CharField(blank=True, max_length=500)),
                ('message', models.TextField()),
                ('template_context', models.JSONField(default=dict, help_text='Context variables for template rendering')),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='When to send this batch', null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.IntegerField(default=0)),
                ('total_sent', models.IntegerField(default=0)),
                ('total_delivered', models.IntegerField(default=0)),
                ('total_failed', models.IntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
                ('channels', models.ManyToManyField(help_text='Channels to use for this batch', to='notifications.notificationchannel')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='clubs.club')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='notifications.notificationtype')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='root.organization')),
                ('recipients', models.ManyToManyField(blank=True, help_text='Specific users to notify', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Lote de Notificaciones',
                'verbose_name_plural': 'Lotes de Notificaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='notifications.notificationbatch'),
        ),
        migrations.AddField(
            model_name='notification',
            name='club',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='clubs.club'),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationtype'),
        ),
        migrations.AddField(
            model_name='notification',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='root.organization'),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate'),
        ),
        migrations.CreateModel(
            name='UserNotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('whatsapp_enabled', models.BooleanField(default=True)),
                ('push_web_enabled', models.BooleanField(default=True)),
                ('push_mobile_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Start of quiet hours (no notifications)', null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='End of quiet hours', null=True)),
                ('digest_enabled', models.BooleanField(default=False, help_text='Receive digest instead of individual notifications')),
                ('digest_frequency', models.CharField(choices=[('hourly', 'Cada hora'), ('daily', 'Diario'), ('weekly', 'Semanal')], default='daily', max_length=20)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preferencia de Notificación',
                'verbose_name_plural': 'Preferencias de Notificaciones',
                'indexes': [models.Index(fields=['user', 'notification_type'], name='notificatio_user_id_7f09cf_idx')],
                'unique_together': {('user', 'notification_type')},
            },
        ),
        migrations.CreateModel(
            name='NotificationEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('event_type', models.CharField(choices=[('created', 'Notificación creada'), ('sent', 'Enviado'), ('delivered', 'Entregado'), ('failed', 'Fallido'), ('bounced', 'Rebotado'), ('read', 'Leído'), ('clicked', 'Clickeado'), ('unsubscribed', 'Desuscrito')], max_length=20)),
                ('event_data', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='notifications.notificationdelivery')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Evento de Notificación',
                'verbose_name_plural': 'Eventos de Notificaciones',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['notification', 'event_type', 'created_at'], name='notificatio_notific_5de90d_idx'), models.Index(fields=['event_type', 'created_at'], name='notificatio_event_t_58f16e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notificationdelivery',
            index=models.Index(fields=['status', 'next_retry_at'], name='notificatio_status_e5e8a7_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationdelivery',
            index=models.Index(fields=['channel', 'status'], name='notificatio_channel_1f14ad_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationdelivery',
            index=models.Index(fields=['provider_id'], name='notificatio_provide_cb399b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationdelivery',
            unique_together={('notification', 'channel')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read', 'created_at'], name='notificatio_recipie_86ea8b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_5e6e57_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'created_at'], name='notificatio_priorit_f7c359_idx'),
        ),
    ]
