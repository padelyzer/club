# Generated by Django 4.2.23 on 2025-07-28 07:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clubs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('root', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('date', models.DateField(db_index=True)),
                ('start_time', models.TimeField(db_index=True)),
                ('end_time', models.TimeField()),
                ('duration_hours', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(8)])),
                ('player_name', models.CharField(max_length=200)),
                ('player_email', models.EmailField(max_length=254)),
                ('player_phone', models.CharField(blank=True, max_length=20)),
                ('player_count', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('confirmed', 'Confirmada'), ('cancelled', 'Cancelada'), ('completed', 'Completada')], db_index=True, default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pendiente'), ('paid', 'Pagado'), ('refunded', 'Reembolsado')], default='pending', max_length=20)),
                ('price_per_hour', models.DecimalField(decimal_places=2, help_text='Price per hour at booking time', max_digits=8)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for the reservation', max_digits=8)),
                ('notes', models.TextField(blank=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.CharField(blank=True, max_length=200)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations_cancelled', to=settings.AUTH_USER_MODEL)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='clubs.club')),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='clubs.court')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations_created', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='root.organization')),
            ],
            options={
                'ordering': ['date', 'start_time'],
                'indexes': [models.Index(fields=['club', 'date', 'start_time'], name='reservation_club_id_d5967d_idx'), models.Index(fields=['court', 'date', 'start_time'], name='reservation_court_i_5f975f_idx'), models.Index(fields=['created_by', 'status'], name='reservation_created_54d651_idx'), models.Index(fields=['status', 'date'], name='reservation_status_86a87c_idx')],
                'unique_together': {('court', 'date', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='BlockedSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('block_type', models.CharField(choices=[('maintenance', 'Mantenimiento'), ('event', 'Evento'), ('holiday', 'DÃ­a festivo'), ('other', 'Otro')], max_length=20)),
                ('reason', models.CharField(max_length=200)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_slots', to='clubs.club')),
                ('court', models.ForeignKey(blank=True, help_text='If null, blocks all courts', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blocked_slots', to='clubs.court')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_slots_created', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_slots', to='root.organization')),
            ],
            options={
                'ordering': ['start_datetime'],
                'indexes': [models.Index(fields=['club', 'start_datetime', 'end_datetime'], name='reservation_club_id_da5c60_idx'), models.Index(fields=['court', 'start_datetime', 'end_datetime'], name='reservation_court_i_e2fe8e_idx')],
            },
        ),
    ]
