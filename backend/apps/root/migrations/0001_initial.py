# Generated by Django 4.2.23 on 2025-07-28 07:18

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('action', models.CharField(choices=[('create', 'Crear'), ('update', 'Actualizar'), ('delete', 'Eliminar'), ('suspend', 'Suspender'), ('reactivate', 'Reactivar'), ('cancel', 'Cancelar'), ('payment', 'Pago'), ('invoice', 'Facturar'), ('impersonate', 'Impersonar')], max_length=20)),
                ('model_name', models.CharField(max_length=50)),
                ('object_id', models.CharField(max_length=50)),
                ('object_repr', models.CharField(max_length=200)),
                ('changes', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClubOnboarding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('current_step', models.CharField(choices=[('legal_info', 'Información Legal'), ('club_setup', 'Configuración de Clubes'), ('technical_setup', 'Configuración Técnica'), ('training', 'Capacitación'), ('payment', 'Método de Pago'), ('golive', 'Puesta en Marcha')], default='legal_info', max_length=20)),
                ('steps_completed', models.JSONField(default=dict)),
                ('target_launch_date', models.DateField()),
                ('actual_launch_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('checklist', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('invoice_date', models.DateField()),
                ('due_date', models.DateField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('pending', 'Pendiente'), ('paid', 'Pagado'), ('overdue', 'Vencido'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('cfdi_uuid', models.CharField(blank=True, max_length=100)),
                ('cfdi_xml', models.TextField(blank=True)),
                ('cfdi_pdf_url', models.URLField(blank=True)),
                ('cfdi_stamped_at', models.DateTimeField(blank=True, null=True)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-invoice_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('type', models.CharField(choices=[('club', 'Club Individual'), ('chain', 'Cadena de Clubes'), ('franchise', 'Franquicia')], default='club', max_length=20)),
                ('business_name', models.CharField(help_text='Razón Social', max_length=200)),
                ('trade_name', models.CharField(help_text='Nombre Comercial', max_length=200)),
                ('rfc', models.CharField(help_text='RFC con homoclave', max_length=13, unique=True, validators=[django.core.validators.RegexValidator('^[A-ZÑ&]{3,4}\\d{6}[A-Z0-9]{3}$', 'RFC inválido')])),
                ('tax_address', models.JSONField(default=dict)),
                ('legal_representative', models.CharField(max_length=200)),
                ('primary_email', models.EmailField(max_length=254)),
                ('primary_phone', models.CharField(max_length=20)),
                ('state', models.CharField(choices=[('trial', 'Periodo de Prueba'), ('active', 'Activo'), ('suspended', 'Suspendido'), ('cancelled', 'Cancelado')], default='trial', max_length=20)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('suspended_at', models.DateTimeField(blank=True, null=True)),
                ('suspended_reason', models.TextField(blank=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('active_users', models.IntegerField(default=0)),
                ('monthly_reservations', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('health_score', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('churn_risk', models.CharField(choices=[('low', 'Bajo'), ('medium', 'Medio'), ('high', 'Alto')], default='low', max_length=10)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('plan', models.CharField(choices=[('basic', 'Básico (Gratis)'), ('competitions', 'Competencias'), ('finance', 'Finanzas'), ('bi', 'Business Intelligence'), ('complete', 'Completo'), ('custom', 'Personalizado')], default='basic', max_length=20)),
                ('custom_modules', models.JSONField(blank=True, default=list)),
                ('billing_frequency', models.CharField(choices=[('monthly', 'Mensual'), ('quarterly', 'Trimestral'), ('yearly', 'Anual')], default='monthly', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('currency', models.CharField(default='MXN', max_length=3)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.16'), max_digits=4)),
                ('payment_method_type', models.CharField(choices=[('card', 'Tarjeta'), ('transfer', 'Transferencia'), ('oxxo', 'OXXO')], default='card', max_length=20)),
                ('payment_method_details', models.JSONField(blank=True, default=dict)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100)),
                ('mercadopago_customer_id', models.CharField(blank=True, max_length=100)),
                ('cfdi_use', models.CharField(default='G03', max_length=10)),
                ('invoice_email', models.EmailField(max_length=254)),
                ('automatic_invoice', models.BooleanField(default=True)),
                ('clubs_allowed', models.IntegerField(default=1)),
                ('users_per_club', models.IntegerField(default=10)),
                ('courts_per_club', models.IntegerField(default=5)),
                ('monthly_reservations_limit', models.IntegerField(default=1000)),
                ('data_retention_days', models.IntegerField(default=365)),
                ('api_calls_per_hour', models.IntegerField(default=1000)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('minimum_term_months', models.IntegerField(default=1)),
                ('early_termination_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('current_period_start', models.DateTimeField()),
                ('current_period_end', models.DateTimeField()),
                ('next_billing_date', models.DateTimeField()),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='root.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='MXN', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('succeeded', 'Exitoso'), ('failed', 'Fallido'), ('refunded', 'Reembolsado')], default='pending', max_length=20)),
                ('gateway', models.CharField(choices=[('stripe', 'Stripe'), ('mercadopago', 'MercadoPago')], max_length=20)),
                ('gateway_payment_id', models.CharField(max_length=100, unique=True)),
                ('gateway_payment_method', models.CharField(max_length=50)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('refunded_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('refund_reason', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='root.invoice')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='root.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['state', 'is_active'], name='root_organi_state_60753f_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['rfc'], name='root_organi_rfc_54fdeb_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['health_score'], name='root_organi_health__3a7b39_idx'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='root.organization'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='root.subscription'),
        ),
        migrations.AddField(
            model_name='clubonboarding',
            name='assigned_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_onboardings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clubonboarding',
            name='organization',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding', to='root.organization'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='root.organization'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='root_audit_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['plan', 'billing_frequency'], name='root_subscr_plan_cb660a_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['next_billing_date'], name='root_subscr_next_bi_30ccfc_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'created_at'], name='root_paymen_status_4a8387_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['gateway', 'gateway_payment_id'], name='root_paymen_gateway_3f9311_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status', 'due_date'], name='root_invoic_status_8ee9e5_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['organization', 'invoice_date'], name='root_invoic_organiz_04c3ef_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action', 'created_at'], name='root_auditl_action_572693_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'created_at'], name='root_auditl_user_id_ce8e5b_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['organization', 'created_at'], name='root_auditl_organiz_9d0df2_idx'),
        ),
    ]
